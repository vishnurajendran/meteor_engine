<shader name="simple_lit" version="440 core">
    <properties>
    <property key = "_color" type="u4" default="(1,1,1,1)"/>
    </properties>

    #VERTEX_PROGRAM
    
    #include </meteor_vertex_utils.glsl>
    #include </meteor_projection_utils.glsl>

    void main()
    {
        // Transform the vertex position using the projection
        vec3 position = getVertexPosition();
        // apply position
        vec4 projected = applyProjection(vec4(position, 1.0));
        applyPosition(projected);

        // pass data to fragments
        vec3 normal = mat3(transpose(inverse(getModelMatrix()))) * getNormal();
        updateNormals(normal);
        passVertexInfoToFragment();
    }

    #END_VERTEX_PROGRAM

    #FRAGMENT_PROGRAM

    #include </meteor_fragment_utils.glsl>
    #include </meteor_lighting_utils.glsl>

    uniform vec4 _color;
    uniform sampler2D _baseTex;
    void main(){
    
       vec4 texColor = texture(_baseTex,getTexCoords()) * _color;
       vec4 objectColor = texColor * _color;

       vec3 lit = applyLighting(vec3(objectColor));
       setFinalOutColor(vec4(lit, 1.0));
    }

    #END_FRAGMENT_PROGRAM
    
</shader>